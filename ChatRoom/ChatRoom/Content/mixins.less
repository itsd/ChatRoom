@import 'configuration.less';

.radius (@radius) {
	border-radius: @radius;
	-webkit-border-radius: @radius;
	-moz-border-radius: @radius;
}

.radiuses (@topleft: 0, @topright: 0, @bottomright: 0, @bottomleft: 0) {
	-webkit-border-top-left-radius: @topleft;
	-moz-border-radius-topleft: @topleft;
	border-top-left-radius: @topleft;
	-webkit-border-top-right-radius: @topright;
	-moz-border-radius-topright: @topright;
	border-top-right-radius: @topright;
	-webkit-border-bottom-right-radius: @bottomright;
	-moz-border-radius-bottomright: @bottomright;
	border-bottom-right-radius: @bottomright;
	-webkit-border-bottom-left-radius: @bottomleft;
	-moz-border-radius-bottomleft: @bottomleft;
	border-bottom-left-radius: @bottomleft;
}

.backgroundSize(@size) {
	background-size: @size @size;
	-moz-background-size: @size @size;
	-o-background-size: @size @size;
	-webkit-background-size: @size @size;
}

.setLeftBubble(@borderWidth,@bubbleFromTop,@triangleSize,@radius,@contentColor,@borderColor) {

	@beforeBorderTop: @triangleSize;
	@beforeBorderRight: 2*@triangleSize;
	@beforeBorderBottom: @triangleSize;

	background-color: @contentColor;
	border: @borderWidth solid @borderColor;
	position: relative;
	.radius(@radius);

	&:before {
		content: "";
		position: absolute;
		left: -@beforeBorderRight;
		top: @bubbleFromTop;
		width: 0;
		height: 0;
		border-top: @beforeBorderTop solid transparent;
		border-right: @beforeBorderRight solid @borderColor;
		border-bottom: @beforeBorderBottom solid transparent;
	}

	&:after {
		content: "";
		position: absolute;
		left: -@beforeBorderRight + 2*@borderWidth;
		top: @bubbleFromTop + @borderWidth;
		width: 0;
		height: 0;
		border-top: @beforeBorderTop - @borderWidth solid transparent;
		border-right: @beforeBorderRight - 2 * @borderWidth solid @contentColor;
		border-bottom: @beforeBorderBottom - @borderWidth solid transparent;
	}
}

.setRightBubble(@borderWidth,@bubbleFromTop,@triangleSize,@radius,@contentColor,@borderColor) {
	@beforeBorderTop: @triangleSize;
	@beforeBorderRight: 2*@triangleSize;
	@beforeBorderBottom: @triangleSize;

	background-color: @contentColor;
	border: @borderWidth solid @borderColor;
	position: relative;
	.radius(@radius);

	&:before {
		content: "";
		position: absolute;
		right: -@beforeBorderRight;
		top: @bubbleFromTop;
		width: 0;
		height: 0;
		border-top: @beforeBorderTop solid transparent;
		border-left: @beforeBorderRight solid @borderColor;
		border-bottom: @beforeBorderBottom solid transparent;
	}

	&:after {
		content: "";
		position: absolute;
		right: -@beforeBorderRight + 2*@borderWidth;
		top: @bubbleFromTop + @borderWidth;
		width: 0;
		height: 0;
		border-top: @beforeBorderTop - @borderWidth solid transparent;
		border-left: @beforeBorderRight - 2 * @borderWidth solid @contentColor;
		border-bottom: @beforeBorderBottom - @borderWidth solid transparent;
	}
}

.setBottomBubble(@borderWidth,@bubbleFromLeft,@triangleSize,@radius,@contentColor,@borderColor) {
	@beforeBorderTop: @triangleSize;
	@beforeBorderRight: 2*@triangleSize;
	@beforeBorderBottom: @triangleSize;

	background-color: @contentColor;
	border: @borderWidth solid @borderColor;
	position: relative;
	.radius(@radius);

	&:before {
		content: "";
		position: absolute;
		left: @bubbleFromLeft;
		bottom: -@beforeBorderRight;
		width: 0;
		height: 0;
		border-left: @beforeBorderTop solid transparent;
		border-top: @beforeBorderRight solid @borderColor;
		border-right: @beforeBorderBottom solid transparent;
	}

	&:after {
		content: "";
		position: absolute;
		bottom: -@beforeBorderRight + 2*@borderWidth;
		left: @bubbleFromLeft + @borderWidth;
		width: 0;
		height: 0;
		border-left: @beforeBorderTop - @borderWidth solid transparent;
		border-top: @beforeBorderRight - 2 * @borderWidth solid @contentColor;
		border-right: @beforeBorderBottom - @borderWidth solid transparent;
	}
}

.closeButton(@applier,@crossSpace, @crossHeight, @crossColor) {
	@crossWidth: @crossSpace;

	width: @crossSpace;
	height: @crossSpace;
	position: relative;

	&:hover {
		cursor: pointer;

		&:after {
			background-color: darken(@crossColor,10%);
		}

		&:before {
			background-color: darken(@crossColor,10%);
		}
	}

	&:after {
		content: '';
		position: absolute;
		width: @crossSpace;
		height: @crossHeight;
		background-color: @crossColor;
		border-radius: 50%;
		.rotate(45deg);
		top: (@crossSpace/2) - @crossHeight + @applier;
	}

	&:before {
		content: '';
		position: absolute;
		width: @crossSpace;
		height: @crossHeight;
		background-color: @crossColor;
		border-radius: 50%;
		.rotate(-45deg);
		top: (@crossSpace/2) - @crossHeight + @applier;
	}
}

.rotate(@deg) {
	-webkit-transform: rotate(@deg);
	-moz-transform: rotate(@deg);
	-ms-transform: rotate(@deg);
	-o-transform: rotate(@deg);
	transform: rotate(@deg);
}

.cross(@crossHeight, @crossColor) {

	@height: 4px;
	@marginTop: @crossHeight/2 - @height/2;

	position: absolute;
	top: 35px;
	left: 35px;
	width: @crossHeight;
	height: @crossHeight;


	&:hover {


		&:before {
			background-color: darken( @crossColor,10%);
		}

		&:after {
			background-color: darken( @crossColor,10%);
		}
	}

	&:before {
		content: '';
		position: absolute;
		width: @crossHeight;
		height: 4px;
		background-color: @crossColor;
		.rotate(90deg);
		top: @marginTop;
	}

	&:after {
		content: '';
		position: absolute;
		width: @crossHeight;
		height: 4px;
		background-color: @crossColor;
		top: @marginTop;
	}
}

.setDialog(@dialogWidth, @dialogHeight) {
	/*==Properties==*/

	@marginTop: 150px;
	@borderWidth: 1px;
	@paddingPx: 5px;
	@borderRadiuses: 3px;
	@startZindex: 100;

	@headerHeight: 30px;
	@headerColor: @brandColor;
	@headerBorderColor: darken(@brandColor,20%);
	@headerTitleColor: darken(@brandColor,30%);
	@contentColor: lighten(@brandColor,30%);
	@contentBorderColor: darken(@brandColor,20%);
	@overlayColor: black;


	/*==Properties==*/
	position: fixed;
	top: @marginTop;
	left: 50%;
	margin: 0 0 0 -(@dialogWidth/2);

	.overlay {
		position: fixed;
		background: @overlayColor;
		bottom: 0;
		left: 0;
		right: 0;
		top: 0;
		z-index: @startZindex;
		opacity: .5;
	}

	.content {
		position: relative;
		width: @dialogWidth + @paddingPx;
		height: @dialogHeight + @paddingPx;
		padding: @paddingPx;
		z-index: @startZindex + 1;

		header {
			height: @headerHeight - (2 * @paddingPx);
			width: @dialogWidth - @paddingPx;
			padding: @paddingPx;
			position: relative;
			background-color: @headerColor;
			.radiuses(@borderRadiuses, @borderRadiuses, 0, 0);
			border: @borderWidth solid @headerBorderColor;
			line-height: @headerHeight - (2 * @paddingPx);

			span {
				color: @headerTitleColor;
				font-weight: bold;
				font-size: 14px;
				display: inline-block;
			}

			div.close {
				width: 12px;
				height: 12px;
				margin-top: 3px;
				display: inline-block;
				float: right;
				.closeButton(2px, 12px, 3px, darken(@headerColor,25%));
			}
		}

		.body {
			height: @dialogHeight;
			width: @dialogWidth - @paddingPx;
			padding: @paddingPx;
			background-color: @contentColor;
			.radiuses(0, 0, @borderRadiuses, @borderRadiuses);
			border: @borderWidth solid @contentBorderColor;
			border-top: none;
		}
	}

	.xxx() {
		@asdaa: 1;



	}
}
